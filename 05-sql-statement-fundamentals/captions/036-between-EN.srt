00:00:01,170 --> 00:00:04,860
Hello everyone and welcome to the between statement lecture.

00:00:05,460 --> 00:00:12,060
So just a quick note in the next few lectures we're going to be discussing the between in and like statements

00:00:12,570 --> 00:00:16,980
and you're not going to get challenges until we discuss all three of those so just keep that in mind

00:00:17,000 --> 00:00:17,270
.

00:00:17,520 --> 00:00:19,250
So after this lecture I will discuss it.

00:00:19,260 --> 00:00:20,840
And after that lecture will discuss like.

00:00:20,910 --> 00:00:23,650
And then you'll get some challenges.

00:00:23,670 --> 00:00:23,920
OK.

00:00:23,940 --> 00:00:29,790
So stuck with the between statement first so we can use the between operator to match a value against

00:00:29,790 --> 00:00:31,430
a range of values.

00:00:31,440 --> 00:00:40,160
So for example a general syntax for this is going to be some value between low and high semi colon.

00:00:40,830 --> 00:00:46,240
So if the value is greater than or equal to the low value and less than or equal to the high value the

00:00:46,410 --> 00:00:48,970
expression returns true or vice versa.

00:00:49,210 --> 00:00:53,370
And we can rewrite the between operator by using the greater than or equal to or less than or equal

00:00:53,370 --> 00:00:58,890
to operators as the following statement value greater than or equal to low in value less than or equal

00:00:58,890 --> 00:00:59,610
to high.

00:00:59,880 --> 00:01:06,090
So if we go back with the between low and high is basically doing the between statement it's just a

00:01:06,090 --> 00:01:08,990
nice way of writing this statement out.

00:01:09,330 --> 00:01:14,790
If you have some value which is basically a column right so some value column greater than or equal

00:01:14,790 --> 00:01:18,760
to low and some value call of greater or less than or equal to high.

00:01:18,780 --> 00:01:21,590
So for example you could say the payments column.

00:01:21,690 --> 00:01:24,240
So you could say if we go back here.

00:01:24,390 --> 00:01:31,860
Give me a payment that is between two ninety nine and 399 and that would return where that's true.

00:01:31,860 --> 00:01:37,470
And that's just another way of writing this like a where statement where payment was greater than or

00:01:37,470 --> 00:01:41,340
equal to 299 and payment was less nickel to 399.

00:01:41,340 --> 00:01:46,200
So this basically a nice way to not have to write this over and over again you can just choose a between

00:01:46,200 --> 00:01:48,840
statement and it makes it a little more readable.

00:01:49,470 --> 00:01:54,580
So if you want to check if a value is out of a range we can ease the not between operator as follows

00:01:54,580 --> 00:01:54,660
.

00:01:54,660 --> 00:01:59,810
You can say some value column is not between low and high.

00:01:59,890 --> 00:02:05,370
So that's basically another way of rewriting this you can save value less than low or value greater

00:02:05,370 --> 00:02:06,410
than a high.

00:02:06,420 --> 00:02:11,010
This is the same thing as the not between operator told doing.

00:02:11,190 --> 00:02:15,660
So let's go ahead and take a look at some real examples on our sample database to get a better idea

00:02:15,660 --> 00:02:18,780
of how to use between and not between.

00:02:18,990 --> 00:02:19,310
OK.

00:02:19,350 --> 00:02:23,760
So I going to go ahead and jump to the sequel database and P.G. adamant.

00:02:24,630 --> 00:02:26,720
OK here you are at PGE admen.

00:02:26,730 --> 00:02:32,860
Let's go ahead and click on the DVD rental database and execute some sequel queries.

00:02:32,970 --> 00:02:34,960
And here we are at the sequel editor.

00:02:35,280 --> 00:02:44,610
So imagine you wanted to selects payments ID's and payment amounts that were between $8 and $9.

00:02:44,610 --> 00:02:47,690
So let's go ahead and show you an example say selects.

00:02:47,730 --> 00:02:56,070
In this case we'll start off by just selecting everything from the payment table and we'll limit it

00:02:56,070 --> 00:03:00,300
to five rows just so he can get a reminder of what the payment table looks like.

00:03:00,300 --> 00:03:06,390
So if you run that click in a five run that I have the payment I.D. the customer I.D. the staff I.D.

00:03:06,780 --> 00:03:10,160
the rental I.D. and then the amounts metric here.

00:03:10,170 --> 00:03:12,430
So that amount column and then the time stamp.

00:03:12,810 --> 00:03:14,020
So what I want to know.

00:03:14,100 --> 00:03:19,620
Let's say I just want to get the customer ID column and the amount column back for payments that were

00:03:19,620 --> 00:03:21,570
in between eight and nine dollars.

00:03:21,570 --> 00:03:22,590
How would I do that.

00:03:23,010 --> 00:03:32,580
So I'm going to say select the customer id call them and the amounts call them from the payment table

00:03:33,960 --> 00:03:48,120
and then I'm going to say well where the amount is between eight and nine dollars.

00:03:48,180 --> 00:03:48,420
OK.

00:03:48,420 --> 00:03:50,860
So let's go ahead and see if that works.

00:03:50,940 --> 00:03:52,420
And it looks like it did.

00:03:52,680 --> 00:03:58,350
So if we look at this now we have all the columns are all the rows I should say where the amount was

00:03:58,350 --> 00:04:04,600
between $89 and this case is either $8 to 99 cents or eight dollars in 97 cents.

00:04:04,600 --> 00:04:05,480
All right.

00:04:05,490 --> 00:04:12,540
So that's basically a nicer way of writing out this where amount statement without having to write an

00:04:12,540 --> 00:04:18,000
all those comparison operators that greater then are less than equal to cetera and let's say I wanted

00:04:18,000 --> 00:04:25,710
to get any payment whose amount is not in the range of 89 what I could do is say something like this

00:04:25,770 --> 00:04:29,090
just not between 89.

00:04:29,100 --> 00:04:32,840
So this is going to return all the rows that we didn't get back.

00:04:32,850 --> 00:04:38,700
So if I run this now I have all the rows where the payment is not between eight and nine dollars.

00:04:38,700 --> 00:04:44,530
So anything 799 and below or $9 and above.

00:04:44,970 --> 00:04:45,330
OK.

00:04:45,330 --> 00:04:51,540
So you can notice that this is a lot more readable than using a bunch of comparison operators.

00:04:51,540 --> 00:04:54,630
And it's also a lot easier to write.

00:04:54,630 --> 00:04:54,900
All right.

00:04:54,900 --> 00:04:56,210
One last example.

00:04:56,520 --> 00:05:00,390
Let's say I want to check a value against some ranges of dates.

00:05:00,420 --> 00:05:04,100
What I can do is something like this.

00:05:04,170 --> 00:05:10,590
Let's go ahead and just check out what the date column looks like some going to look ahead and say selects

00:05:13,010 --> 00:05:16,340
payments under underscore dates.

00:05:16,350 --> 00:05:20,430
Column from payments and I'm just going to say

00:05:23,070 --> 00:05:26,220
limit 5 so we don't call everything back.

00:05:26,310 --> 00:05:31,650
So this is what her payment date looks like as far as the column and we'll discuss how to deal with

00:05:31,860 --> 00:05:34,970
date types in a lot more detail later on.

00:05:35,040 --> 00:05:41,880
But right now I just want to show you is that you can actually use a basic literal date string format

00:05:42,570 --> 00:05:49,620
to query based off the dates and that format is just going to be the year the month and the date in

00:05:49,620 --> 00:05:52,980
dashes So it's going to be what we see here.

00:05:53,100 --> 00:06:01,020
You have a four digit year dash a two digit month dash a two digit dates and you don't have to worry

00:06:01,020 --> 00:06:04,990
right now about this entire time stamp without the time zone.

00:06:05,220 --> 00:06:10,200
And again we'll discuss how to deal with dates and time stamps in much more detail later on.

00:06:10,200 --> 00:06:12,310
Right now we'll just keep it simple.

00:06:12,390 --> 00:06:13,620
So let's say I want to get

00:06:16,050 --> 00:06:20,120
payments in amounts so I'll say amounts.

00:06:20,130 --> 00:06:31,560
Comma payment dates from payments that occurred between let's say 2007 February 7th and 2007 February

00:06:31,590 --> 00:06:32,780
15th.

00:06:32,910 --> 00:06:33,930
So how would I do that.

00:06:33,990 --> 00:06:38,280
It would look something like this I would say select the amount and payment date column from payments

00:06:39,000 --> 00:06:46,380
and then I'm going to say where the payments underscore date is between.

00:06:47,010 --> 00:06:52,680
And here I can actually just Taipan strings going to say a single quote They're going to put in the

00:06:52,680 --> 00:06:57,680
year and we said February 7th.

00:06:57,840 --> 00:07:04,380
So notice how I say my four digit year number dash two digits for the month.

00:07:04,730 --> 00:07:06,200
Just for the dates.

00:07:06,480 --> 00:07:08,640
And I'm also going to say Ann's

00:07:10,890 --> 00:07:12,390
2007.

00:07:12,410 --> 00:07:18,420
And I think we said the 15th so February 15th here and then semi colons.

00:07:18,480 --> 00:07:19,160
And that's.

00:07:19,170 --> 00:07:21,280
So it's going to run that check worked.

00:07:21,600 --> 00:07:22,560
And there you have it.

00:07:22,560 --> 00:07:27,150
Now we have all the payments that occurred between those two dates.

00:07:27,210 --> 00:07:30,210
So apparently it looks like they all occurred on the 14th.

00:07:30,210 --> 00:07:32,280
So that's it's a..

00:07:32,280 --> 00:07:32,930
All right.

00:07:33,270 --> 00:07:39,810
So just a quick overview what we learned in this quick lecture was how do you choose between and not

00:07:39,810 --> 00:07:40,320
between.

00:07:40,320 --> 00:07:47,190
So again if I want to say not between those two dates and run that will give me all the occurrences

00:07:47,190 --> 00:07:52,110
that didn't occur between those two dates which would have just been blocking out everything that occurred

00:07:52,110 --> 00:07:53,790
on the 14th.

00:07:53,820 --> 00:07:54,300
OK.

00:07:54,330 --> 00:07:57,630
Again we'll learn how to deal with time stamps in much more detail later on.

00:07:57,860 --> 00:07:59,070
But here's one way you could do it.

00:07:59,070 --> 00:08:02,490
You can just pass in a string that looks like this.

00:08:02,850 --> 00:08:06,840
All right in the next lecture We'll discuss the in statements and then the lecture after that we'll

00:08:06,840 --> 00:08:11,220
discuss the like statement and then we'll be able to build off some more complicated challenges for

00:08:11,220 --> 00:08:12,540
you to solve.

00:08:12,540 --> 00:08:13,180
All right.

00:08:13,380 --> 00:08:14,240
Thanks everyone.

00:08:14,250 --> 00:08:19,390
Go ahead and review the lecture in case you want to learn a little more about between and not between

00:08:19,490 --> 00:08:19,560
.

00:08:19,600 --> 00:08:23,270
And Casey Nira Radia he didn't get a good understanding the first time around.

00:08:23,490 --> 00:08:27,640
But really what I would encourage you to do is just go ahead and play around the tables right now.

00:08:27,700 --> 00:08:30,900
So just to make sure you understand how to use between and not between.

00:08:30,900 --> 00:08:37,050
So go ahead and mess around with some of the other tables like customer et cetera and mess around with

00:08:37,080 --> 00:08:39,910
between and not between just to make sure you have a full understanding.

00:08:40,230 --> 00:08:40,830
OK.

00:08:41,040 --> 00:08:42,860
Thanks everyone and I'll see at the next lecture