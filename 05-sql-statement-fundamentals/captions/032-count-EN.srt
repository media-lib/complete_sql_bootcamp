00:00:01,140 --> 00:00:06,540
Hello everyone and welcome to the Count function lecture this lecture we're going to learn about the

00:00:06,540 --> 00:00:08,370
Count function how to use it.

00:00:08,400 --> 00:00:13,980
We'll see some general syntax examples and then we'll actually do some real examples in action for example

00:00:13,980 --> 00:00:15,900
database.

00:00:15,900 --> 00:00:21,890
So the count function returns the number of input rows that match a specific condition of query.

00:00:22,140 --> 00:00:26,340
So basically just counts where the condition was true.

00:00:26,340 --> 00:00:32,700
So an example syntax may look something like this select count Asterix and notice the parentheses there

00:00:32,910 --> 00:00:34,370
from table.

00:00:34,980 --> 00:00:42,020
So let's go ahead and break down this statement a little further that count Asterix function returns

00:00:42,020 --> 00:00:45,740
a number of rows returned by a select clause.

00:00:45,930 --> 00:00:48,920
So that would just be the number of row count that we've seen earlier.

00:00:49,260 --> 00:00:55,380
When you apply that count to the entire table postscripts sequel actually scans the table sequentially

00:00:55,380 --> 00:00:56,650
.

00:00:56,790 --> 00:01:00,570
You can also specify a specific column count for readability.

00:01:00,570 --> 00:01:06,040
So for example you could say select count and then a specific column from the table.

00:01:06,900 --> 00:01:12,660
So similar to that count Asterix function that count column function returns number of rows returned

00:01:12,660 --> 00:01:14,030
by that select clause.

00:01:14,040 --> 00:01:16,790
So it just returns a single number of rows.

00:01:16,800 --> 00:01:23,610
However keep in mind that that count column method does not consider null values in the column and we'll

00:01:23,610 --> 00:01:25,160
see that later on.

00:01:25,760 --> 00:01:26,540
OK.

00:01:26,640 --> 00:01:27,540
Quick final note.

00:01:27,600 --> 00:01:29,740
We can actually use the count of dustings.

00:01:29,820 --> 00:01:35,940
For example you can say select count this stinks column from table and that will count the number of

00:01:35,940 --> 00:01:40,020
distinct rows for that particular column.

00:01:40,020 --> 00:01:43,860
Let's go ahead and see some examples so we can flesh out this idea a little further.

00:01:44,130 --> 00:01:47,130
I'm going to go ahead and chop to PGA admen now.

00:01:47,980 --> 00:01:48,350
OK.

00:01:48,360 --> 00:01:50,380
So here I am at PG admin.

00:01:50,490 --> 00:01:57,150
Let's go ahead and select our DVD rental database and click on the X Q. arbitrary sequel queries and

00:01:57,140 --> 00:01:58,640
just couldn't execute some stuff.

00:01:58,650 --> 00:02:02,620
So let's say I want to just to get the number of transactions in the payment table.

00:02:02,940 --> 00:02:11,650
So let's say I wanted to do this the old fashioned way I could say select everything from payment tables

00:02:11,650 --> 00:02:14,870
to my colon and I press 5 there.

00:02:15,210 --> 00:02:20,820
And what I would have to do without using the count function is grab every thing and then scroll all

00:02:20,820 --> 00:02:25,040
the way down and then note the actual count which is one.

00:02:25,290 --> 00:02:27,880
Fourteen thousand five hundred ninety six.

00:02:28,050 --> 00:02:37,110
But now if I just say counts the number of rows from payments which is basically just counting the number

00:02:37,110 --> 00:02:39,380
of transactions from the payment table.

00:02:39,630 --> 00:02:42,860
So I run this guy or this query.

00:02:43,230 --> 00:02:46,550
Notice I now I just get a much faster response time.

00:02:46,560 --> 00:02:51,140
So if we scroll down here we can see 11 milliseconds and now I get the same count.

00:02:51,150 --> 00:02:53,490
Fourteen thousand five hundred ninety six.

00:02:53,520 --> 00:02:57,470
So you can see this is a lot nicer and it's also a lot more readable.

00:02:57,840 --> 00:02:58,440
OK.

00:02:58,710 --> 00:03:01,350
So let's see an example of using it with distinct.

00:03:01,350 --> 00:03:05,200
So let's get the number of amounts that a customer pays.

00:03:05,880 --> 00:03:11,340
So for example I can say selects which is go ahead and see everything.

00:03:11,340 --> 00:03:12,570
One more time.

00:03:12,570 --> 00:03:15,660
Run that query.

00:03:15,660 --> 00:03:18,620
So notice I have various amount types.

00:03:18,630 --> 00:03:21,840
I have seven ninety nine one ninety nine 299.

00:03:21,840 --> 00:03:26,990
Let's say I just wanted to know the count of the distinct amount types.

00:03:27,000 --> 00:03:30,820
So how many distinct types in the amount column are there.

00:03:31,110 --> 00:03:45,600
So then I would say counts and then I specify distinct amounts parentheses and so I'm going to count

00:03:45,600 --> 00:03:49,440
the distinct amount types in that amount row.

00:03:49,470 --> 00:03:57,090
So if I run that I get 19 distinct types in the amount row and that's the total count there.

00:03:57,570 --> 00:04:02,880
And something I also want you to know is that you can go ahead and use parentheses which did the Stintz

00:04:03,840 --> 00:04:04,890
function as well.

00:04:04,890 --> 00:04:10,980
So if I had another set of parentheses here PGE admin will go ahead and highlight that syntax for me

00:04:10,980 --> 00:04:13,640
to show me which princes match up with which parentheses.

00:04:13,650 --> 00:04:15,310
But just putting a cursor next to them.

00:04:15,660 --> 00:04:21,070
But just for readability you may prefer to write it out with two sets parentheses here.

00:04:21,090 --> 00:04:25,220
Now if I go ahead and run that again we get the same results.

00:04:25,260 --> 00:04:25,800
All right.

00:04:25,800 --> 00:04:31,170
So that's just the basics of using count along with dustings count in general.

00:04:31,170 --> 00:04:32,880
We're going to revisit count a lot.

00:04:32,880 --> 00:04:36,410
It's going to be especially useful when we learn about group by clauses.

00:04:36,660 --> 00:04:38,250
But right now we can go ahead.

00:04:38,340 --> 00:04:44,820
We won't have a challenge specifically on count but we rule we will be revisiting counts in all the

00:04:44,820 --> 00:04:46,770
challenges from now on.

00:04:46,770 --> 00:04:50,610
So there's not going to be a specific challenge for count but you'll definitely see it pop up again

00:04:50,610 --> 00:04:51,450
and again.

00:04:51,480 --> 00:04:55,140
So keep it in mind as you go on through future challenges.

00:04:55,210 --> 00:04:58,920
OK thanks everyone and I'll see you at the next lecture.