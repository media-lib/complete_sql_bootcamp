00:00:01,530 --> 00:00:06,750
Hello everyone and welcome to the lecture on primary and foreign keys.

00:00:06,750 --> 00:00:11,190
So in this lecture we're going to learn what primary keys are and what foreign keys are and what they

00:00:11,190 --> 00:00:13,920
actually mean in a sequel database.

00:00:13,950 --> 00:00:18,210
We're going to see some brief examples of using them to create columns of tables but we're going to

00:00:18,210 --> 00:00:22,830
go over the table creation methods in much more detail in the create table lecture That's coming up

00:00:22,830 --> 00:00:23,680
next.

00:00:23,700 --> 00:00:26,150
So in the previous lecture we learn about different data types.

00:00:26,190 --> 00:00:29,440
And in this lecture we're going to learn about primary keys and foreign keys.

00:00:29,490 --> 00:00:34,350
And those are two concepts we're going to need to get down before we actually check out the syntax of

00:00:34,350 --> 00:00:36,780
how to actually create tables in sequel.

00:00:36,780 --> 00:00:41,970
So don't worry too much about understanding the sequel text examples in this lecture.

00:00:41,970 --> 00:00:47,430
Worry more about just fundamentally understanding what a primary key is and what a foreign key is.

00:00:47,550 --> 00:00:50,220
And these are actually pretty simple concepts.

00:00:50,220 --> 00:00:53,880
So it should be pretty straightforward.

00:00:53,970 --> 00:01:00,450
So let's talk about keys and start off a primary key a primary key is a column or a group of columns

00:01:00,450 --> 00:01:04,310
that's used to identify a row uniquely in a table.

00:01:04,560 --> 00:01:08,460
You define primary keys through pipe primary key constraints.

00:01:08,460 --> 00:01:13,230
And we'll talk about what a constraint is and how that it relates to a column when you're creating a

00:01:13,230 --> 00:01:15,670
table in more detail the next lecture.

00:01:15,690 --> 00:01:20,130
But just to understand that you have to declare some sort of constraint when you're actually creating

00:01:20,150 --> 00:01:26,290
the table so a table can have one and only one primary key.

00:01:26,370 --> 00:01:29,930
It's a good practice to add a primary key to every table.

00:01:30,150 --> 00:01:35,100
And when you add a primary key to a table in post-career sequel what happens is you create a unique

00:01:35,220 --> 00:01:40,170
index on the column or a group of columns used to find the primary key.

00:01:40,170 --> 00:01:45,870
So let me go ahead and discuss a little more hands on what this actually means as far as the primary

00:01:45,870 --> 00:01:54,030
key is if you recall back to the customer table or like a payment table specifically in the Customer

00:01:54,030 --> 00:02:00,720
table we had columns such as customer ID first name last name emails etc..

00:02:00,930 --> 00:02:07,810
So the primary key for a table of that sort like a customer table would be the customer ID column.

00:02:07,980 --> 00:02:15,090
And that's because that specific column the customer id value will uniquely identify that specific row

00:02:15,090 --> 00:02:21,810
for the customer and that's different than the other columns because users can share first names right

00:02:21,810 --> 00:02:22,130
.

00:02:22,140 --> 00:02:29,460
So you can have one user name that John Smith and another user named John Roberts or something like

00:02:29,460 --> 00:02:30,020
that.

00:02:30,120 --> 00:02:32,160
And since they both share the first name John.

00:02:32,190 --> 00:02:35,630
It's just possible the other customers also have the first name.

00:02:35,670 --> 00:02:38,950
You don't want to use the first name as a primary key.

00:02:39,030 --> 00:02:45,780
Instead you'll use the customer ID as a primary key in order to uniquely identify all your customers

00:02:45,780 --> 00:02:45,980
.

00:02:46,050 --> 00:02:48,510
And that's really the basis of what a primary key is.

00:02:48,690 --> 00:02:52,720
It's designed to uniquely identify each row in that table.

00:02:52,950 --> 00:02:57,870
And that's why it's good practice to add a primary key to every table in the database we've been working

00:02:57,870 --> 00:03:02,630
with pretty much all the primary keys usually have some sort of underscore ID.

00:03:03,060 --> 00:03:08,180
And another topic to think about when you're creating primary keys as far as data types.

00:03:08,190 --> 00:03:14,580
A lot of times she'll be using a serial data type because it will basically auto increments.

00:03:14,700 --> 00:03:17,590
When you add a new row to your table.

00:03:17,970 --> 00:03:19,810
So that's something to keep in mind right.

00:03:19,860 --> 00:03:22,650
You want to basically oh I'm adding a new customer.

00:03:22,800 --> 00:03:23,990
This will be customer number two.

00:03:24,000 --> 00:03:24,690
Oh another one.

00:03:24,680 --> 00:03:30,150
Customer Number three four etc. so that ensures that you're going to keep them unique as you go along

00:03:30,170 --> 00:03:30,600
.

00:03:31,020 --> 00:03:31,530
OK.

00:03:31,710 --> 00:03:36,600
So that's the main idea of a primary key is to uniquely and the that row in the table.

00:03:36,600 --> 00:03:38,650
So let's go ahead and see a little bit of syntax.

00:03:38,700 --> 00:03:40,640
What it might look like for adding it.

00:03:40,980 --> 00:03:46,290
So normally we add the primary key to a table when we define the table structure using create table

00:03:46,290 --> 00:03:47,310
statements.

00:03:47,310 --> 00:03:51,090
Now I know we haven't actually seen this create table statement and we're going to go over it in much

00:03:51,090 --> 00:03:52,740
more detail the next lecture.

00:03:52,860 --> 00:03:56,720
But just think of this kind of like a preview of what it looks like when you're creating a table and

00:03:56,730 --> 00:03:57,570
sequel.

00:03:57,750 --> 00:03:59,490
Your basic syntax looks like this.

00:03:59,490 --> 00:04:03,970
You say create table statement then you can put the table name.

00:04:04,050 --> 00:04:07,620
You go ahead and just put in whatever table name you want.

00:04:07,620 --> 00:04:11,970
And basically what the statement is going to start doing is it's going to say create this table and

00:04:11,970 --> 00:04:16,920
then we have a set of parentheses here and then you're going to say the desired column name you on that

00:04:16,920 --> 00:04:21,740
table the desired data type and then you're going to have a constraint.

00:04:21,750 --> 00:04:26,250
So usually the very first column will be your primary key column.

00:04:26,250 --> 00:04:32,370
So you'll have a primary key constraint and that basically says OK this column needs to be the primary

00:04:32,370 --> 00:04:37,070
key of this table and there's other constraints such as like unique or not null.

00:04:37,120 --> 00:04:40,570
And we'll go over those constraints in much more detail in the next lecture.

00:04:40,680 --> 00:04:45,630
But I want you to kind of just get a sneak preview slash understanding of the sequel syntax that we're

00:04:45,630 --> 00:04:48,020
going to see in much more detail next lecture.

00:04:48,210 --> 00:04:54,030
But this is how you would at least show or define a primary key table when you're creating a table.

00:04:55,740 --> 00:05:00,200
OK so moving on let's talk about foreign keys.

00:05:00,200 --> 00:05:07,420
A foreign key is a field or group of fields in a table that uniquely defies a row in another table.

00:05:07,440 --> 00:05:13,100
So in other words the basics is a foreign key is to find that a table that refers to the primary key

00:05:13,170 --> 00:05:15,010
of the other table.

00:05:15,020 --> 00:05:21,450
So what that means is just a foreign key is a feel or group of fields so a column or a group of columns

00:05:22,010 --> 00:05:26,300
in one table that happens to be a primary key of another table.

00:05:26,570 --> 00:05:32,940
So the table that contains the foreign key is called referencing table or child table and the table

00:05:32,940 --> 00:05:38,750
which the foreign key references is called the referenced table or parents table and a table can have

00:05:38,750 --> 00:05:42,410
multiple foreign keys the pending on it's relationships of other tables.

00:05:42,420 --> 00:05:48,300
So that basically makes sense because let's say we have a table such as the payment table where we have

00:05:48,300 --> 00:05:52,400
a payments ID that would be the primary key of the payment table.

00:05:52,400 --> 00:05:59,630
So uniquely identifies every single payments but you may also have the customer ID in that same table

00:05:59,670 --> 00:06:03,910
but you'll have many instances of the same customer making a unique purchase right.

00:06:03,930 --> 00:06:11,480
So then that customer ID in the payment table is a foreign key because it's the primary key in the customer

00:06:11,490 --> 00:06:12,070
table.

00:06:12,180 --> 00:06:13,470
And that's basically it.

00:06:13,640 --> 00:06:16,710
So that foreign key is a primary key of another table.

00:06:16,700 --> 00:06:22,280
So it references another table or as a child of the other table and the other table is the reference

00:06:22,280 --> 00:06:25,290
table or the parents table.

00:06:25,280 --> 00:06:29,820
So in postscripts sequel you define a foreign key through a foreign key constraint.

00:06:29,970 --> 00:06:35,790
And I know we haven't actually gone over constraints really well here but just keep that in mind it's

00:06:35,810 --> 00:06:40,880
just to get you some vocab our vocabulary as you go to the next lecture.

00:06:40,940 --> 00:06:46,460
So this foreign key constraint indicates that values in a column or group of columns in the child table

00:06:46,800 --> 00:06:50,750
match with the values and a column or group of columns of the parent table.

00:06:51,140 --> 00:06:57,290
So we say that a foreign key constraint maintains referential integrity between child and parent tables

00:06:57,300 --> 00:06:57,660
.

00:06:57,750 --> 00:07:00,970
So it's good to have these references in place.

00:07:01,010 --> 00:07:06,950
OK so we know a foreign key is a field or group of fields so a column or group of columns in a table

00:07:07,250 --> 00:07:10,490
that uniquely identifies a row in another table.

00:07:10,820 --> 00:07:15,930
So let's go ahead and explore this just quickly threw it to table example.

00:07:16,280 --> 00:07:22,970
Let's say we have a table named s o headers here on the right that stores sales order header's information

00:07:22,980 --> 00:07:23,080
.

00:07:23,150 --> 00:07:31,460
And let's say it stores information such as some sales order ID as the ID column A customer ID and a

00:07:31,470 --> 00:07:33,820
ship to address column.

00:07:33,870 --> 00:07:39,370
So we have some ID and we'll have this be the primary key of the S-O headers table.

00:07:39,440 --> 00:07:46,460
And they have a customer I.D. and they shipped to a column and then we have some items table.

00:07:46,500 --> 00:07:52,380
So we have some sales order line items table called SBO items that's a table here on the left.

00:07:52,380 --> 00:07:59,570
And here we're going to have some other columns item ID sales order ID or S-O ID product ID some quantity

00:07:59,570 --> 00:08:01,560
and some net price.

00:08:01,620 --> 00:08:08,620
And so what happens here is we can create a reference in order to link these keys together.

00:08:08,730 --> 00:08:14,700
And so what that means is we can basically say in this as Items table or the sales order items table

00:08:15,240 --> 00:08:26,060
the column s o id or that Sales Order ID is going to reference the Primary Key ID s o headers and that's

00:08:26,060 --> 00:08:27,160
really all there is to it.

00:08:27,140 --> 00:08:30,460
So this ID is a reference to the Primary Key ID.

00:08:30,480 --> 00:08:38,990
Here are the headers and then in the items table we have item id being a primary key S-O items.

00:08:39,010 --> 00:08:47,070
And we can actually also have both of these be primary keys as a group so you can define both item id

00:08:47,130 --> 00:08:53,990
as so id to be primary keys to two columns or that group of columns the primary keys of the items table

00:08:54,480 --> 00:08:59,900
with SO Id still referencing the ID column of the S-O headers.

00:09:00,000 --> 00:09:06,510
So Explora later on we're creating I am tables how to actually produce these how to make these constraints

00:09:06,500 --> 00:09:07,090
work.

00:09:07,320 --> 00:09:13,680
But the main idea here is just to understand how a primary key uniquely defines a row and a table and

00:09:13,670 --> 00:09:18,590
then how a foreign key is just a field or group of fields in a table that uniquely than the size of

00:09:18,600 --> 00:09:20,510
row in another table.

00:09:20,900 --> 00:09:21,480
OK.

00:09:21,680 --> 00:09:26,520
So that's really all there is to it as far as what we're going to cover in this lecture later on we're

00:09:26,520 --> 00:09:31,420
going to explore how to expand the idea for references of keys when actually creating tables.

00:09:31,760 --> 00:09:32,220
OK.

00:09:32,490 --> 00:09:33,660
So that's it.

00:09:33,650 --> 00:09:37,560
And I will see it the next lecture where we're going to actually go through the syntax and see some

00:09:37,560 --> 00:09:38,390
examples of.

00:09:38,420 --> 00:09:40,350
Create table statements.

00:09:40,400 --> 00:09:42,150
Thanks everyone and I'll see you at the next lecture